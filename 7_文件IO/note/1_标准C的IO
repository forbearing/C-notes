1:FILE 结构体
	typedef struct iobuf{
		int cnt;			// 剩余的字节数
		char *ptr;			// 下一个字符的位置
		char *base			// 缓冲区的位置
		int flag;			// 文件访问模式
		ing fd;				// 文件描述符
	}FILE;
	1:用户程序 --> 标准IO函数 --> FILE *sp --> FILE类型结构体变量 
		--> 缓冲 --> 键盘/屏幕/文件
	2:标准C的IO函数(比如printf/scanf)的参数没有FILE指针,
	  因为是针对标准输入输出(stdin,stdout)


2:标准C的IO缓存类型
	1:全缓存: 要求填满整个缓存区后才进行IO系统调用操作,对于磁盘文件通常使用全
			  缓存访问
	2:行缓存:
		1:涉及一个终端(例如标准输入输出),使用行缓存
		2:行缓存满自动输出
		3:碰到换行符自动输出
	3:无缓存
		标准错误流 stderr 通常是不带缓存区的,这使得错误信息能够尽快地显示出来G


示例:
	line_buffer.c					// 行缓存示例
