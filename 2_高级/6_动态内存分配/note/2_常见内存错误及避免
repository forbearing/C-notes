1:常见内存错误及避免
	1:使用未分配成功的内存
		避免方式: 在使用内存之前检查指针是否为 NULL
	2:引用分配成功但尚未初始化的内存
		避免方式: 赋初值,即使是赋零值也不可省略
	3:内存分配成功并且已经初始化,但操作越过了内存的边界
		避免方式: 注意下标的使用不能超出边界
	4:忘记释放内存,造成内存泄漏
		避免方式: 动态内存的申请与释放必须配对,程序中 malloc 与 free 的使用次数
				  一定要相同,否则会出现问题
	5:释放了内存却继续使用它
		避免方式: 使用 free 释放了内存后,将指针设置为 NULL, 若没有设置为 NUL,
				  就会产生"野指针",它是指向"垃圾"内存的指针


2:内存错误的注意点和野指针
	1:内存错误的注意点
		1:指针消亡,并不代表它所指的内存会被自动释放
		2:内存被释放了,并不表示指针消亡或者成了 NULL 指针	
	2:野指针
		1:野指针的形成是指针变量没有初始化,任何指针变量刚被创建时不会自动成为
		  NULL 指针,它的缺省值是随机的,它会乱指一气
		2:指针变量在创建的同时应当被初始化,要么将指针设置为 NULL, 要么让它
		  指向合法的内存
		3:使用 free 释放了内存后,将指针设置为 NULL, 若没有设置为 NULL, 就会产生
		  "野指针", 它是指向"垃圾"内存的指针


示例
	error.c
