1:结构体的概念
	1:在实际问题的处理中,一组数据往往具有不同的数据类型
	2:C语言中引入了另一种构造数据类型,称为结构(structure)或结构体
	3:结构体是一种构造类型,它是由若干成员组成的,每一个成员可以是一种基本数据类型
	  或者又是一个构造类型,它相当于其他高级语言中的 "记录"


2:结构体的声明
	1:结构体在使用之前需要先声明结构体
	2:结构体的声明语法
		struct 结构体名
		{
			类型说明符 成员名;		// 成员列表
			...
		};
		1:成员列表由若干个成员组成,每个成员都是该结构的一个组成部分,对每个成员也
		  必须左类型说明
		2:{}不表示复合语句,其后有分号
	3:结构体的声明可以放置在程序的开头部分,位于头文件声明之后,
	  也可以声明在头文件中.
	4:结构体名与其成员名可以重名,结构体成员和其他变量可以重名
	5:结构体类型名称是 "struct 结构体名", 注意 struct 关键字不能省略
	6:结构体和系统提供的标准数据类型具有同样的地位,即都是可以用来定义变量的类型,
	  只不过结构体需要用户自己指定而已.
	7:结构体的使用必须要定义对应的结构体变量
	8:结构体类型相当于一个模型,系统对其不分配实际内存,只有定义相应的变量才实际
	  分配内存.


3:结构体变量的定义
	1:预先已声明结构体
		struct 结构体名 变量名1, ..., 变量名n;
	2:声明结构体的同时定义结构体变量
		struct 结构体名
		{
			成员列表;
		} 变量名1, ..., 变量名n;
	3:直接定义结构体变量
		struct
		{
			成员列表
		} 变量名1, ..., 变量名 n;


示例
	basic.h			// 结构体的声明放在头文件中
	struct_basic	// 结构体便变量/数组的介绍和使用
