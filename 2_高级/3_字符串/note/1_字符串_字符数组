1:字符串和字符数组的概念
	1:在C语言中字符串(字符串常量)是用双引号括起来的任意字符序列,在字符串中也可
	  以包含转义序列 "Hello\n\'World"
	2:字符数组是用来存放字符的数组,字符数组中的每一个元素存放一个字符.
	3:字符串是一个以以结束符 '\0' 结尾的字符数组,数组中的每一个元素都可以存放
	  一个字符,数组元素的类型为 char
	4:在C语言中没有专门的字符串变量,通常用agiel字符数组来存放一个字符串,而且字
	  符串的末尾有一个结束符 '\0';


2:字符数组的初始化方式
	1:字符初始化字符数组
		char array[] = ['c', ' ', p','r','o','g','r','a','m'];
		1:数组长度为9,占有9个字节
		2:字符初始化字符数组时,建议最后一个字符是以结束符 '\0' 为结尾
	2:字符串初始化字符数组
		char array[] = {"C program"};
		char array[] = "C program";
		1:用字符串方式赋值比用字符逐个赋值要占一个字节,用于存放字符串结束符'0'
		  上面的数组.
		2:数组长度为9(不计算结束符), 数组占有10个字节(计算结束符)
		3:'\0'是由C编译器自动加上的,由于采用了'\0'标志,所以在用字符串赋初值
		  初始化时一般无须指定合数组的长度,而有系统自动处理


3:字符数组的输入输出
	1:通过循环逐个输入输出
	2:将整个字符串一次输入或输出,C语言允许用数组名进行输入输出一个字符数组 
		char a[10];
		scanf("%s", a);		// 整体输入
		char a[] = "boy";	
		printf("%s", a);	// 整体输出
	在C语言中规定,数组名就代表了该数组的首地址,这个数组是以首地址开头的一块连续
	的内存单元,通过数组名即可对整个字符数组进行输入输出


4:指向字符串的指针
	1:在C语言中,可以将字符指针指向字符串
		char *ptr = "C Language";
	2:被指向的字符串存放在常量区,不能对其进行修改,只能读取
	3:字符串初始化字符数组时,字符串存放在栈区,可以对其进行读写操作
	4:可以将字符数组名赋值给一个字符指针,反之不行(数组名是常量)
		char *ptr;
		char string[] = "C Language";
		ptr = string;			// 指针 ptr 指向栈区中的字符串 "C Language"
	5:字符数组赋值给字符指针,此后字符指针指向栈区中的字符串,此时指针内容可以修改
		char *p;
		char a[] = "hello";
		p = a;
		*(p+1) = 'E';
	6:指针指向的字符串如果在栈区或静态存储区可以进行修改,只有是常量区不可以修改




示例
	char_array
		char array[10] = {'\0'}					// 初始化
		memset(array, 0, sizeof(array));		// 另一种初始化
		fgets(array, sizeof(array), stdin);		// 替代 scanf 的输入方式
			// 当输入时,换行符也计入一个字符
		fputs(array, stdout)					// 替代 printf 的输出方式
	word.c
