1:条件编译的概念
	1:一般情况下,源程序中所有的行都进行编译,但是有时希望对其中一部分内容在满足
	  一定条件下才进行编译,也就是对一部分内容执行编译的条件, 这就是编译
	2:条件编译可以指定代码的一部分是被正常编译还是被完全忽略
	3:条件编译有利于提升程序的可移植性,增加程序的灵活性 


2:条件编译的语法结构
	1:条件编译语法一:
		#ifdef 标识符(宏名)		// 或#if defined(标识符)
			程序段
		#else
			程序段2
		#endif
		1:当指定的宏已经被 #define 指令定义过,则在程序编译阶段只编译程序段1,
		  否则编译程序段2, #else 可以没有
	2:条件编译语法二:
		#ifndef 标识符(宏名)	// 或#if !defined(标识符)
			程序段1
		#else
			程序段2
		#endif
		1:当宏未被 #define 指令定义过则编译程序段1,否则编译程序段2
	3:条件编译语法三:
		#if 常量表达式			#if(常量表达式1)
			程序段1					程序段1
		#else					#elif(常量表达式2)
			程序段2					程序段2
		#endif					#else
									程序段3
								#endif
		1:当指定的常量表达式值为真(非0)时旧编译程序段1,否则编译程序段2



示例
	condition.h
	condition1.h
	condition2.h
	condition3.h
	condition.c
