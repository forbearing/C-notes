1:无参宏定义的语法结构
	1:无参宏定义的语法:
		#define 标识符(宏名) [字符串(宏体)]
		1:功能: 定义可在程序中使用宏, 宏的内容由字符串(宏体)替换
		2:宏体可缺省,表示宏名定义过或取消宏体
		3:示例
			#define YES 1
			#define NO 0
			#define OUT printf("hello linux\n")		// 不能加分号
			#define WIDTH 80
			#define LENGTH (WIDTH+40)


2:宏的移除
	1:宏的移除语法
		#undef 宏名
		1:功能: 删除前面定义的宏
		示例:
			#undef PI
			#undef OUT


3:宏定义的规则
	1:#表示这时一条预处理指令,以#开头的均为预处理指令
	2:#define 为宏定义指令,标识符为所定义的宏名
	3:宏名一般习惯用大写字母表示,以便与变量名相区别
	4:宏定义不是C语言,不必在行末加分号
	5:字符串(宏体)可以是常数,表达式,格式化字符串等,对于数值表达式进行求值的
	  宏定义应使用括号
	6:在进行宏定义时,可以引用已定义的宏名,可以层层替换
	7:宏替换只做字符串替换,不分配内存空间,不做正确性检查
	8:宏的有效范围为定义之后到本源文件结束, 可以用 #undef 指令终止宏定义的作用域


示例:
	macro.c
