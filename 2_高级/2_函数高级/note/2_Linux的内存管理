1:Linux的内存管理
	1:从上到下:高地址->低地址, 段页式内存管理
		内核空间
		环境变量,命令行参数
		栈
		共享内存映射区
		堆
		数据段
		代码段
	2:栈:存储局部变量,参数(形参),函数返回地址等
	3:堆:也称动态内存分配,由程序员调用 malloc 等函数向系统申请任意指定大小的
	  内存,并有程序员自己调用 free 等函数来释放内存.
	4:数据段:
		1:静态存储区: 存储全局变量和 static 变量, 分为初始化区和未初始化区
		2:常量区
	5:代码段(正文段): 存储程序的函数代码

	1:进程隔离:
		1:保护独立的进程,防止互相干涉数据和存储空间
		2:进程中使用的地址是虚拟地址
	2:段页式内存管理
		1:进程在虚拟内存中分为代码段,数据段,堆栈段
		2:进程在段中有许多固定代大小的块组成,这些块称为页
		3:虚拟地址由段号,页号,和页中偏移量构成
		4:虚拟地址和内存中物理地址的动态映射(MMU)
		5:按需调页,消除了进程全部载入内存中



2:C程序的运行流程
	1:系统将可执行文件加载进程进内存,函数代码读入代码段中,程序中的全局变量,静态
	  变量读入数据段中并初始化
	2:内核启动特殊例程,此例程从程序入口 main 开始执行
	3:启动例程
		1:在进程的 main 函数执行之前内核会启动
		2:编译器在编译时会将启动例程编译进可执行文件中
		3:搜集命令行的参数传递给 main 函数中的参数
