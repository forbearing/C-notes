1:gcc的发展
	1:GNU(意为非洲牛羚)项目,又称革奴计划,是由 Richard Stallman 在1983 创办
	2:1985年, Richard Stallman 又创立了自由软件基金会(Free Software Foundation,
	  简称 FSF), 来为 GNU 提供技术,法律以及财政支持
	3:编译器 GCC 就是 GNU 开发出来的一款编译器软件, GCC 是GNU CC 的简称
	4:GCC 符合 ANSI C 标准,能够编译C,C++, Object C 等语言编写的程序. GCC还是一个
	  交叉平台编译器,能够在当前 CPU 平台为多种不同架构的硬件平台开发软件,因此适
	  合嵌入式领域的开发编译
	5:GCC 是免费的,可移植.


2:gcc的基本选项
		预编译 --> 编译 --> 汇编 --> 链接
	-v: 打印出编译器内部编译各过程的命令行信息和编译器的版本
	-o file: 指定输出文件
	-E: 只是预编译,不做其他处理
	-S: 只是编译不汇编,生成汇编代码
	-c: 只是编译不链接,生成".o"的目标文件
	-l dir: 在头文件的搜索路径里列表中添加 dir 目录
	-g: 在可执行程序中包含标准调试信息
	-std=name: 指定 C 语言的标准(如:c99)


3:gcc的优化选项
	-O: 减少代码的长度和执行时间,效果等价与 -O1, 其中包括线程跳转和延迟退栈
	-O2: 除了完成所有 -O1 级别的优化之外,同时还进行一些额外的调整工作. 如:处理器
		 指令调度等
	-O3: 除了完成 -O2 级别的优化之外,还包括循环展开和其他一些与处理器特性相关的
		 优化工作
	(数字越大优化的等级越高,也就是意味着程序的运行速度越快,一般选用 -O2 选项, 它
	在优化长度,编译时间和代码大小之间取得了一个比较理想的平衡点)


4:gcc:警告和出错选项:
	-ansi: 支持符合 ANSI 标准的 C 程序
	-pedantic: 允许发出 ANSI C 标准所列出的全部警告信息
	-pedantic-error: 允许发出 ANSI C 标准所列出的全部错误信息
	-w: 关闭所有警告
	-Wall: 允许发出 gcc 所提供的所有有用的报警信息
		(制作库文件选项)
	-L dir: 在库文件的搜索路径列表中添加 dir 目录
	-static: 链接静态库
	-lname: 链接名为 name 的库文件
	-shared: 表明是使用共享库
