1:数组的概念
	1:在程序设计中,为了处理方便,把具有相同类型的若干变量按有序的形式组织起来.
	  这些按序排列的同类型数据元素的集合称为数组
	2:数组中的所有元素必须属于相同的数据类型
	3:在C语言中,数组属于构造数据类型,一个数组可以分解为多个数组元素,这些数组元素
	  可以是基本数据类型或是构造类型
	4:按数组元素的类型不同,数组可分为数值数组,字符数组,指针数组,结构体数组等类别
	5:数组说明:
		1:在计算机内存中,同一数组的所有元素按下标顺序依次存放在相邻的存储单元中,
		  因此数组占据的内存空间大小可由数组长度和数组类型计算出来
		2:数组名是数组的唯一标识符
		3:数组元素用数组名和元素下标表示


2:一维数组的定义
	1:在C语言中使用数组必须先进行定义
	2:一维数组的定义方式:
		类型说明符 数组名[常量表达式];
		1:类型说明符是任一一种基本数据类型或构造类型
		2:数组名是用户定义的数组标识符
		3:方括号中的常量表达式表示数组元素的格式,也称为数组的长度
			int a[10];	int b[2+3];  int c[LEN];//符号常量
	3:注意点:
		1:数组的类型实际上是指数组元素的取值类型,对于同一个数组,其所有元素的数据
		  类型都是相同的
		2:数组名的书写规则符合标识符的命名规则
		3:数组名不能与其他变量名相同
		4:方括号中常量表达式表示数组元素的个数,但下标从0开始计算
		5:考虑到程序的移植性,不要使用变长数组,即不要在方括号中用变量来表示元素的
		  个数,但是可以使用符号常量或常量表达式
		6:允许在同一类型中,定义多个数组和多个变量,但不推荐
			如: int a,b,c,d,k1[10],k2[20];	//推荐在一行定义同一数据类型 


3:一维数组的初始化
	1:方式一: 在定义数组的同时进行初始化
		类型说明符 数组名[常量表达式]={值,值,...,值};
		1:其中{}中的各数据值即可为各元素的初值,各值之间用逗号间隔
	2:方法二: 对某些符合运算规律的数组元素进行初始化
		如: a[i] = i*i
	3:方法三: 通过循环和用户输入给数组进行动态初始化
		for(...){scanf("%d",&a[i]);}
	4:初始化的规定
		1:可以只给部分元素赋初值,当{}中值的个数少于元素个数时,只给前面部分元素
		  赋值,剩下部分自动赋值为0
		2:只能给元素逐个赋值,不能给数组整体赋值
		3:如给全部元素赋值,则在数组定义中可以不指定数组的长度
		4:数组赋值时不要越界操作,否则会引发不可预知的严重后果


4:一维数组的引用
	1:数组元素是组成数组的基本单元,数组元素也是一种变量,其标识方法为数组名后缀后
	  跟一个下标,下标表示元素在数组中的顺序号
	2:数组元素引用的形式: 数组名[下标]
		1:下标只能为整型常量或整型表达式. 如为小数,C编译器将自动取整
		2:在C语言中只能逐个地使用下标引用数组元素,而不能一次引用整个数组


5:冒泡排序的原理:
	1:冒牌排序(bubble sort)是一种计算机领域较简单的排序算法
	2:冒泡算法的名字由来是因为越小的元素会经由交换慢慢"浮"上数列的顶端
	3:冒泡排序算法:
		1:每一论从最后一个开始比较相邻的元素,将小的数和前一个数进行交换
		2:对每一对相邻元素作同样的工作,将最小的数冒到前面
		3:持续 n-1 轮, 直到排序完成


6:选择排序的原理:
	1:选择排序(selection sort)每一趟从待排序的数据元素中选出最小(或最大)的一个
	  元素,顺序放在已排好序的数列后面,直到全部待排序的数据元素排完
	2:选择排序算法:
		1:首先在未排序的序列中找到最小(大)元素,存放到排序序列的起始位置
		2:再从剩余未排序的元素中继续寻找最小(最大)元素,然后放到已排序序列的末尾
		3:以此类推,直到所有元素均排序完毕
